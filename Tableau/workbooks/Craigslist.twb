<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20181.18.0706.1237                               -->
<workbook original-version='18.1' source-build='2018.1.3 (20181.18.0706.1237)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='Craigslist' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='craigslist' inline='true' name='federated.12o5lre1df3er010mcjgs0c25081' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='craigslist' name='textscan.0e2jgh01nfs5mv1db3mnl0vqp4w4'>
            <connection class='textscan' directory='C:/Users/Jim/Desktop/Github/usedcaranalysis' filename='craigslist.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0e2jgh01nfs5mv1db3mnl0vqp4w4' name='craigslist.csv' table='[craigslist#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='zh_HK' separator=','>
            <column datatype='string' name='post_title' ordinal='0' />
            <column datatype='string' name='mileage' ordinal='1' />
            <column datatype='integer' name='price' ordinal='2' />
            <column datatype='string' name='condition' ordinal='3' />
            <column datatype='string' name='title_status' ordinal='4' />
            <column datatype='string' name='transmission' ordinal='5' />
            <column datatype='string' name='drive' ordinal='6' />
            <column datatype='string' name='location' ordinal='7' />
            <column datatype='string' name='body_text' ordinal='8' />
            <column datatype='string' name='link' ordinal='9' />
            <column datatype='string' name='F11' ordinal='10' />
            <column datatype='integer' name='F12' ordinal='11' />
            <column datatype='string' name='F13' ordinal='12' />
            <column datatype='string' name='F14' ordinal='13' />
            <column datatype='string' name='F15' ordinal='14' />
            <column datatype='string' name='F16' ordinal='15' />
            <column datatype='string' name='F17' ordinal='16' />
            <column datatype='string' name='F18' ordinal='17' />
            <column datatype='string' name='F19' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;zh_Hans_CN&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;zh_HK&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>post_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[post_title]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>post_title</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mileage</remote-name>
            <remote-type>129</remote-type>
            <local-name>[mileage]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>mileage</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>price</remote-name>
            <remote-type>20</remote-type>
            <local-name>[price]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>price</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>condition</remote-name>
            <remote-type>129</remote-type>
            <local-name>[condition]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>condition</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title_status</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title_status]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>title_status</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transmission</remote-name>
            <remote-type>129</remote-type>
            <local-name>[transmission]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>transmission</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>drive</remote-name>
            <remote-type>129</remote-type>
            <local-name>[drive]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>drive</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>body_text</remote-name>
            <remote-type>129</remote-type>
            <local-name>[body_text]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>body_text</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>link</remote-name>
            <remote-type>129</remote-type>
            <local-name>[link]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>link</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F11</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F11]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F11</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F12</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F12]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F12</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F13</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F13]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F13</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F14</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F14]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F14</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F15</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F15]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F15</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F16</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F16]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F16</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F17</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F17]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F17</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F18</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F18]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F18</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F19</remote-name>
            <remote-type>129</remote-type>
            <local-name>[F19]</local-name>
            <parent-name>[craigslist.csv]</parent-name>
            <remote-alias>F19</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LZH_RCN' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' hidden='true' name='[F11]' role='dimension' type='nominal' />
      <column datatype='integer' hidden='true' name='[F12]' role='measure' type='quantitative' />
      <column datatype='string' hidden='true' name='[F13]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F14]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F15]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F16]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F17]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F18]' role='dimension' type='nominal' />
      <column datatype='string' hidden='true' name='[F19]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[body_text]' role='dimension' semantic-role='' type='nominal' />
      <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Berkeley north&quot;' value='&quot;Berkeley&quot;' />
          <semantic-value key='&quot;Bernal heights&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Castro&quot;' value='&quot;Castro Valley&quot;' />
          <semantic-value key='&quot;Downtown&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Excelsior&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Hayes valley&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Ingleside&quot;' value='&quot;South San Francisco&quot;' />
          <semantic-value key='&quot;Inner richmond&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Inner sunset&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Mission district&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Oakland downtown&quot;' value='&quot;Oakland&quot;' />
          <semantic-value key='&quot;Oakland east&quot;' value='&quot;Oakland&quot;' />
          <semantic-value key='&quot;Oakland hills&quot;' value='&quot;Oakland&quot;' />
          <semantic-value key='&quot;Oakland lake merritt&quot;' value='&quot;Oakland&quot;' />
          <semantic-value key='&quot;Oakland north&quot;' value='&quot;Oakland&quot;' />
          <semantic-value key='&quot;Oakland piedmont&quot;' value='&quot;Piedmont&quot;' />
          <semantic-value key='&quot;Oakland rockridge&quot;' value='&quot;Oakland&quot;' />
          <semantic-value key='&quot;Russian hill&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;San fancisco&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;San jose downtown&quot;' value='&quot;San José&quot;' />
          <semantic-value key='&quot;San jose east&quot;' value='&quot;San José&quot;' />
          <semantic-value key='&quot;San jose north&quot;' value='&quot;San José&quot;' />
          <semantic-value key='&quot;San jose south&quot;' value='&quot;South San Jose Hills&quot;' />
          <semantic-value key='&quot;San jose west&quot;' value='&quot;San José&quot;' />
          <semantic-value key='&quot;Soma&quot;' value='&quot;San Francisco&quot;' />
          <semantic-value key='&quot;Suisun city&quot;' value='&quot;Fairfield&quot;' />
          <semantic-value key='&quot;Sunset&quot;' value='&quot;San Fernando&quot;' />
          <semantic-value key='&quot;Visitacion valley&quot;' value='&quot;South San Francisco&quot;' />
        </semantic-values>
      </column>
      <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[mileage]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Jim/Documents/My Tableau Repository/Datasources/craigslist.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='08/05/2018 11:30:04 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='805' timestamp-start='2018-08-05 11:30:04.856' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>post_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[post_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>post_title</remote-alias>
              <ordinal>0</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>805</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mileage</remote-name>
              <remote-type>129</remote-type>
              <local-name>[mileage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mileage</remote-alias>
              <ordinal>1</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>423</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>price</remote-name>
              <remote-type>20</remote-type>
              <local-name>[price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>price</remote-alias>
              <ordinal>2</ordinal>
              <family>craigslist.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>231</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>condition</remote-name>
              <remote-type>129</remote-type>
              <local-name>[condition]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>condition</remote-alias>
              <ordinal>3</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>title_status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[title_status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>title_status</remote-alias>
              <ordinal>4</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>transmission</remote-name>
              <remote-type>129</remote-type>
              <local-name>[transmission]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>transmission</remote-alias>
              <ordinal>5</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>drive</remote-name>
              <remote-type>129</remote-type>
              <local-name>[drive]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>drive</remote-alias>
              <ordinal>6</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>7</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>body_text</remote-name>
              <remote-type>129</remote-type>
              <local-name>[body_text]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>body_text</remote-alias>
              <ordinal>8</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>805</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>link</remote-name>
              <remote-type>129</remote-type>
              <local-name>[link]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>link</remote-alias>
              <ordinal>9</ordinal>
              <family>craigslist.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>805</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LZH_RCN' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.738589' measure-ordering='alphabetic' measure-percentage='0.261411' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Belmont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Excelsior&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oakland rockridge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;San jose south&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;209&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Inner richmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Novato&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San bruno&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sonoma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;As.is any repairs needed is&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Downtown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lake merced&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oakland hills&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San jose&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Suisun city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boulder creek&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gilroy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Milpitas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Redwood city&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San rafael&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Walnut creek&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palo alto&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San jose west&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ashbury heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Larkspur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oakland lake merritt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;San jose downtown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Castro valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hollister&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Noe valley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sebastopol&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cupertino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Inner sunset&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San carlos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Soquel&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Capitola&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Healdsburg&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mountain view&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russian hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Santa rosa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Atherton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;East palo alto&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los banos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oakland north&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;San jose east&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sunset&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Half moon bay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mission district&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sanramon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Watsonville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burlingame&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hayes valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rohnert pk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Santa clara&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Castro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hercules&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Napa county&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Scotts valley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clearlake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ingleside&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North beach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San anselmo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Soma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Berkeley north&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Foster city&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Menlo park&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Petaluma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San leandro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bayview&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Emeryville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Los gatos&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oakland piedmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;San jose north&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tracy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alamo square&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Daly city&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland downtown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San fancisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South san francisco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Campbell&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hayward&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morgan hill&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Santa cruz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Woodside&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bernal heights&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Millbrae&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pittsburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;San mateo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Visitacion valley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lake county&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland east&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San francisco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='&quot;California&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.12o5lre1df3er010mcjgs0c25081'>
      <datasources>
        <datasource caption='craigslist' name='federated.12o5lre1df3er010mcjgs0c25081' />
      </datasources>
      <datasource-dependencies datasource='federated.12o5lre1df3er010mcjgs0c25081'>
        <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Berkeley north&quot;' value='&quot;Berkeley&quot;' />
            <semantic-value key='&quot;Bernal heights&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Castro&quot;' value='&quot;Castro Valley&quot;' />
            <semantic-value key='&quot;Downtown&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Excelsior&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Hayes valley&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Ingleside&quot;' value='&quot;South San Francisco&quot;' />
            <semantic-value key='&quot;Inner richmond&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Inner sunset&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Mission district&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Oakland downtown&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland east&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland hills&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland lake merritt&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland north&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland piedmont&quot;' value='&quot;Piedmont&quot;' />
            <semantic-value key='&quot;Oakland rockridge&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Russian hill&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;San fancisco&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;San jose downtown&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;San jose east&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;San jose north&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;San jose south&quot;' value='&quot;South San Jose Hills&quot;' />
            <semantic-value key='&quot;San jose west&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;Soma&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Suisun city&quot;' value='&quot;Fairfield&quot;' />
            <semantic-value key='&quot;Sunset&quot;' value='&quot;San Fernando&quot;' />
            <semantic-value key='&quot;Visitacion valley&quot;' value='&quot;South San Francisco&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
        <column-instance column='[title_status]' derivation='None' name='[none:title_status:nk]' pivot='key' type='nominal' />
        <column datatype='string' name='[title_status]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]'>
        <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[none:location:nk]' />
          <groupfilter function='empty-level' member='[none:location:nk]' />
        </groupfilter>
      </filter>
      <filter class='categorical' column='[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]'>
        <groupfilter function='level-members' level='[none:title_status:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='craigslist' name='federated.12o5lre1df3er010mcjgs0c25081' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12o5lre1df3er010mcjgs0c25081'>
            <column datatype='string' name='[link]' role='dimension' type='nominal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Berkeley north&quot;' value='&quot;Berkeley&quot;' />
                <semantic-value key='&quot;Bernal heights&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Castro&quot;' value='&quot;Castro Valley&quot;' />
                <semantic-value key='&quot;Downtown&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Excelsior&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Hayes valley&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Ingleside&quot;' value='&quot;South San Francisco&quot;' />
                <semantic-value key='&quot;Inner richmond&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Inner sunset&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Mission district&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Oakland downtown&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland east&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland hills&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland lake merritt&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland north&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland piedmont&quot;' value='&quot;Piedmont&quot;' />
                <semantic-value key='&quot;Oakland rockridge&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Russian hill&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;San fancisco&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;San jose downtown&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose east&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose north&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose south&quot;' value='&quot;South San Jose Hills&quot;' />
                <semantic-value key='&quot;San jose west&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;Soma&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Suisun city&quot;' value='&quot;Fairfield&quot;' />
                <semantic-value key='&quot;Sunset&quot;' value='&quot;San Fernando&quot;' />
                <semantic-value key='&quot;Visitacion valley&quot;' value='&quot;South San Francisco&quot;' />
              </semantic-values>
            </column>
            <column aggregation='CountD' datatype='string' default-role='measure' default-type='quantitative' name='[mileage]' role='dimension' type='nominal' />
            <column-instance column='[link]' derivation='None' name='[none:link:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[mileage]' derivation='None' name='[none:mileage:nk]' pivot='key' type='nominal' />
            <column-instance column='[post_title]' derivation='None' name='[none:post_title:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title_status]' derivation='None' name='[none:title_status:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[post_title]' role='dimension' type='nominal' />
            <column datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column-instance column='[price]' derivation='Sum' name='[sum:price:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[title_status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]' included-values='in-range-or-null'>
            <min>1</min>
            <max>45507</max>
          </filter>
          <slices>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]</column>
          </slices>
          <aggregation value='false' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12o5lre1df3er010mcjgs0c25081].[sum:price:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]' value='Price'>
              <formatted-text>
                <run>Price</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]' value='Title Status'>
              <formatted-text>
                <run>Title Status</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.12o5lre1df3er010mcjgs0c25081].[sum:price:qk]' />
              <lod column='[federated.12o5lre1df3er010mcjgs0c25081].[none:post_title:nk]' />
              <lod column='[federated.12o5lre1df3er010mcjgs0c25081].[none:link:nk]' />
              <lod column='[federated.12o5lre1df3er010mcjgs0c25081].[none:mileage:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12o5lre1df3er010mcjgs0c25081].[sum:price:qk]</rows>
        <cols>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Price of Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='craigslist' name='federated.12o5lre1df3er010mcjgs0c25081' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12o5lre1df3er010mcjgs0c25081'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Berkeley north&quot;' value='&quot;Berkeley&quot;' />
                <semantic-value key='&quot;Bernal heights&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Castro&quot;' value='&quot;Castro Valley&quot;' />
                <semantic-value key='&quot;Downtown&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Excelsior&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Hayes valley&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Ingleside&quot;' value='&quot;South San Francisco&quot;' />
                <semantic-value key='&quot;Inner richmond&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Inner sunset&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Mission district&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Oakland downtown&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland east&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland hills&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland lake merritt&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland north&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland piedmont&quot;' value='&quot;Piedmont&quot;' />
                <semantic-value key='&quot;Oakland rockridge&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Russian hill&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;San fancisco&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;San jose downtown&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose east&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose north&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose south&quot;' value='&quot;South San Jose Hills&quot;' />
                <semantic-value key='&quot;San jose west&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;Soma&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Suisun city&quot;' value='&quot;Fairfield&quot;' />
                <semantic-value key='&quot;Sunset&quot;' value='&quot;San Fernando&quot;' />
                <semantic-value key='&quot;Visitacion valley&quot;' value='&quot;South San Francisco&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title_status]' derivation='None' name='[none:title_status:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column datatype='string' name='[title_status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12o5lre1df3er010mcjgs0c25081].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.12o5lre1df3er010mcjgs0c25081].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1</min>
            <max>45507</max>
          </filter>
          <slices>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[Latitude (generated)]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[Longitude (generated)]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12o5lre1df3er010mcjgs0c25081].[Longitude (generated)]' field-type='quantitative' max='-13343294.000785854' min='-13821484.049737915' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12o5lre1df3er010mcjgs0c25081].[Latitude (generated)]' field-type='quantitative' max='4688703.3900769381' min='4298568.7977093989' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]' value='false' />
            <format attr='break-on-special' field='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]' value='City&#10;'>
              <formatted-text>
                <run>City&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]' />
              <color column='[federated.12o5lre1df3er010mcjgs0c25081].[avg:price:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12o5lre1df3er010mcjgs0c25081].[Latitude (generated)]</rows>
        <cols>[federated.12o5lre1df3er010mcjgs0c25081].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Price of Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='craigslist' name='federated.12o5lre1df3er010mcjgs0c25081' />
          </datasources>
          <datasource-dependencies datasource='federated.12o5lre1df3er010mcjgs0c25081'>
            <column-instance column='[price]' derivation='Avg' name='[avg:price:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Berkeley north&quot;' value='&quot;Berkeley&quot;' />
                <semantic-value key='&quot;Bernal heights&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Castro&quot;' value='&quot;Castro Valley&quot;' />
                <semantic-value key='&quot;Downtown&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Excelsior&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Hayes valley&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Ingleside&quot;' value='&quot;South San Francisco&quot;' />
                <semantic-value key='&quot;Inner richmond&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Inner sunset&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Mission district&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Oakland downtown&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland east&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland hills&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland lake merritt&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland north&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Oakland piedmont&quot;' value='&quot;Piedmont&quot;' />
                <semantic-value key='&quot;Oakland rockridge&quot;' value='&quot;Oakland&quot;' />
                <semantic-value key='&quot;Russian hill&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;San fancisco&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;San jose downtown&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose east&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose north&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;San jose south&quot;' value='&quot;South San Jose Hills&quot;' />
                <semantic-value key='&quot;San jose west&quot;' value='&quot;San José&quot;' />
                <semantic-value key='&quot;Soma&quot;' value='&quot;San Francisco&quot;' />
                <semantic-value key='&quot;Suisun city&quot;' value='&quot;Fairfield&quot;' />
                <semantic-value key='&quot;Sunset&quot;' value='&quot;San Fernando&quot;' />
                <semantic-value key='&quot;Visitacion valley&quot;' value='&quot;South San Francisco&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title_status]' derivation='None' name='[none:title_status:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[price]' role='measure' type='quantitative' />
            <column datatype='string' name='[title_status]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]' filter-group='3' included-values='in-range-or-null'>
            <min>1</min>
            <max>45507</max>
          </filter>
          <slices>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]</column>
            <column>[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12o5lre1df3er010mcjgs0c25081].[avg:price:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12o5lre1df3er010mcjgs0c25081].[avg:price:qk]' />
              <text column='[federated.12o5lre1df3er010mcjgs0c25081].[avg:price:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12o5lre1df3er010mcjgs0c25081].[avg:price:qk]</rows>
        <cols>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2006-2016 Honda Civic on Craigslist </run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='craigslist' name='federated.12o5lre1df3er010mcjgs0c25081' />
      </datasources>
      <datasource-dependencies datasource='federated.12o5lre1df3er010mcjgs0c25081'>
        <column datatype='string' name='[location]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Berkeley north&quot;' value='&quot;Berkeley&quot;' />
            <semantic-value key='&quot;Bernal heights&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Castro&quot;' value='&quot;Castro Valley&quot;' />
            <semantic-value key='&quot;Downtown&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Excelsior&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Hayes valley&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Ingleside&quot;' value='&quot;South San Francisco&quot;' />
            <semantic-value key='&quot;Inner richmond&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Inner sunset&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Mission district&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Oakland downtown&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland east&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland hills&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland lake merritt&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland north&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Oakland piedmont&quot;' value='&quot;Piedmont&quot;' />
            <semantic-value key='&quot;Oakland rockridge&quot;' value='&quot;Oakland&quot;' />
            <semantic-value key='&quot;Russian hill&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;San fancisco&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;San jose downtown&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;San jose east&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;San jose north&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;San jose south&quot;' value='&quot;South San Jose Hills&quot;' />
            <semantic-value key='&quot;San jose west&quot;' value='&quot;San José&quot;' />
            <semantic-value key='&quot;Soma&quot;' value='&quot;San Francisco&quot;' />
            <semantic-value key='&quot;Suisun city&quot;' value='&quot;Fairfield&quot;' />
            <semantic-value key='&quot;Sunset&quot;' value='&quot;San Fernando&quot;' />
            <semantic-value key='&quot;Visitacion valley&quot;' value='&quot;South San Francisco&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
        <column-instance column='[price]' derivation='None' name='[none:price:qk]' pivot='key' type='quantitative' />
        <column-instance column='[title_status]' derivation='None' name='[none:title_status:nk]' pivot='key' type='nominal' />
        <column datatype='integer' name='[price]' role='measure' type='quantitative' />
        <column datatype='string' name='[title_status]' role='dimension' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='17' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='5250' id='18' type='title' w='98400' x='800' y='1000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='92750' id='15' type='layout-basic' w='98400' x='800' y='6250'>
              <zone h='46375' id='5' param='horz' type='layout-flow' w='80000' x='800' y='52625'>
                <zone h='46375' id='3' type='layout-basic' w='80000' x='800' y='52625'>
                  <zone h='46375' id='8' name='Sheet 8' w='40000' x='800' y='52625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='46375' id='11' name='Sheet 9' w='40000' x='40800' y='52625'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='46375' id='12' param='vert' type='layout-flow' w='80000' x='800' y='6250'>
                <zone h='46375' id='13' name='Sheet 7' w='80000' x='800' y='6250'>
                  <layout-cache minheight='275' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='92750' id='4' is-fixed='true' param='vert' type='layout-flow' w='18400' x='80800' y='6250'>
                <zone h='8625' id='14' name='Sheet 7' param='[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='18400' x='80800' y='6250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='18250' id='19' name='Sheet 7' param='[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]' type='filter' values='database' w='18400' x='80800' y='14875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='6500' id='20' mode='checkdropdown' name='Sheet 8' param='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]' type='filter' values='database' w='18400' x='80800' y='33125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]' type='filter' />
            <card param='[federated.12o5lre1df3er010mcjgs0c25081].[none:price:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.12o5lre1df3er010mcjgs0c25081].[sum:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[none:link:nk]</field>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</field>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[none:mileage:nk]</field>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[none:post_title:nk]</field>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[none:title_status:nk]</field>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[sum:price:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12o5lre1df3er010mcjgs0c25081].[avg:price:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[avg:price:qk]</field>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[location (group)]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <fields>
                  <field>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;As.is any repairs needed is&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.12o5lre1df3er010mcjgs0c25081].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 9'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      o7EFwGZH8/8DzBrl8aqxtVIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
